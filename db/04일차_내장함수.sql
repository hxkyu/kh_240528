# 문자열 함수
# 길이 함수 
# LENGTH(문자열) : 문자열의 바이트수를 반환 
SELECT LENGTH("안녕"); # 6바이트
SELECT LENGTH("12"); # 2바이트 
# CHAR_LENGTH(문자열) : 문자열의 길이를 반환 
SELECT CHAR_LENGTH("안녕"); # 2
SELECT CHAR_LENGTH("12"); # 2

# CONCAT(문자열1, 문자열2, ...) : 문자열들을 이어서 하나의 문자열을 만듬 
SELECT CONCAT('안녕','하','세요','.');

# 탐색 
# FIELD(찾을문자열, 문자열1, 문자열2, ...) : 문자열들에서 찾을 문자열이 몇번째에 있는지 반환 
# 1부터 시작. 없으면 0 
SELECT FIELD("안녕", '안녕하세요.', '안녕1');
# INSTR(문자열1, 문자열2) : 문자열1에서 문자열2가 몇번째부터 시작하는지 반환. 없으면 0
SELECT INSTR("안녕하세요.", "안녕");
SELECT INSTR("안녕하세요.", "안녕1");
# LOCATE(문자열2, 문자열1) : 문자열1에서 문자열2가 몇번째부터 시작하는지 반환. 없으면 0
SELECT LOCATE("안녕", "안녕하세요.");
SELECT LOCATE("안녕1", "안녕하세요.");

# FORMAT(숫자, 소수점자리수) : 숫자를 소수점 자리수까지 표현, 3자리마다 ,를 추가 
SELECT FORMAT(1234567.89012, 2);

# BIN(숫자) : 2진수, OCT(숫자) : 8진수, HEX(숫자) : 16진수 
SELECT BIN(31), OCT(31), HEX(31);

# LPAD(문자열, 자리, 채울문자열) : 문자열이 자리수보다 작으면 왼쪽에 채울문자열을 추가하여 자리수를 맞춤
# RPAD(문자열, 자리, 채울문자열) : 문자열이 자리수보다 작으면 오른쪽에 채울문자열을 추가하여 자리수를 맞춤

# RGB(255,20,3)을 16진수로 변경해서 #FF1403으로 표현하는 쿼리 
SELECT CONCAT('#',LPAD(HEX(255),2,'0'),LPAD(HEX(20),2,'0'),LPAD(HEX(3),2,'0'))'RGB(255,20,3)';

